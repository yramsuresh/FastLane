{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/search-data/search-data.component.ts","webpack:///src/app/search-data/search-data.component.html","webpack:///src/app/speech-recognition/speech-recognition.component.ts","webpack:///src/app/speech-recognition/speech-recognition.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","SearchDataComponent","_ngZone","userData","firstName","lastName","address","filteredData","value","run","updateData","text","filter","obj","Object","values","some","val","toString","toLowerCase","includes","returnText","resetUserData","SpeechRecognitionComponent","searchTextEmitter","resetData","window","console","log","emit","document","getElementById","src","webkitSpeechRecognition","recognition","lang","onresult","event","speechToText","results","transcript","emitSearchValue","start","onspeechend","stop","onaudioend","voiceSearch","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Voice Search';\n}\n","<app-search-data></app-search-data>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { SpeechRecognitionComponent } from './speech-recognition/speech-recognition.component';\nimport { SearchDataComponent } from './search-data/search-data.component';\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SpeechRecognitionComponent,\n    SearchDataComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    Ng2SearchPipeModule\n    ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, NgZone } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-search-data',\r\n  templateUrl: './search-data.component.html',\r\n  styleUrls: ['./search-data.component.css']\r\n})\r\nexport class SearchDataComponent implements OnInit {userData = [\r\n {\r\n firstName: 'John',\r\n lastName: 'Doe',\r\n address: '7687 Park Port'\r\n },\r\n {\r\n firstName: 'Alice',\r\n lastName: 'Smith',\r\naddress: '156 Avenue Ports'\r\n },\r\n{\r\nfirstName: 'Peter',\r\n lastName: 'Jones',\r\n address: '5203 Northern Centre'\r\n },\r\n {\r\n firstName: 'Bob',\r\n lastName: 'Brown',\r\n address: '91057 Rider Club'\r\n },\r\n {\r\n firstName: 'Tom',\r\n lastName: 'Smith',\r\n address: '16288 West Harbour'\r\n}\r\n ];\r\n\r\n\r\n  filteredData: any;\r\n\r\n  constructor(private _ngZone: NgZone) { }\r\n\r\n  ngOnInit(): void {\r\n    this.filteredData = this.userData;\r\n  }\r\n\r\n  returnText(value: string) {\r\n    //use ngZone to detect changes in the view template\r\n    this._ngZone.run(() => {\r\n      this.updateData(value);\r\n    })\r\n  }\r\n\r\n  updateData(text: string) {\r\n    if(text){\r\n      // search for the given string in all properties of all data objects in the array\r\n      this.filteredData = this.userData.filter(obj =>  \r\n        Object.values(obj).some(val => \r\n          val.toString().toLowerCase().includes(text.toLowerCase())\r\n        )\r\n      );\r\n    }\r\n  }\r\n\r\n  resetUserData() {\r\n    this.filteredData = this.userData;\r\n  }\r\n}\r\n","<app-speech-recognition \n    (searchTextEmitter)=\"returnText($event)\"\n    (resetData)=\"resetUserData()\">\n</app-speech-recognition>\n<div *ngIf=\"filteredData.length !== 0\" class=\"m-auto w-75 p-2\">\n    <table class=\"table\">\n        <thead>\n            <tr>\n                <th scope=\"col\">First</th>\n                <th scope=\"col\">Last</th>\n                <th scope=\"col\">Address</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr *ngFor=\"let user of filteredData\">\n                <td>{{user.firstName}}</td>\n                <td>{{user.lastName}}</td>\n                <td>{{user.address}}</td>\n            </tr>\n        </tbody>\n    </table>\n</div>\n<div *ngIf=\"filteredData.length === 0\" class=\"m-auto w-75 p-2\">\n    No records found.\n</div>","import { Component, OnInit, Output, EventEmitter} from '@angular/core';\n\n@Component({\n  selector: 'app-speech-recognition',\n  templateUrl: './speech-recognition.component.html',\n  styleUrls: ['./speech-recognition.component.css']\n})\nexport class SpeechRecognitionComponent implements OnInit {\n  speechToText: string;\n  @Output() searchTextEmitter: EventEmitter<string> = new EventEmitter<string>();\n  @Output() resetData: EventEmitter<string> = new EventEmitter<string>();\n\n  constructor() { }\n\n  ngOnInit(): void {\n    \n\n    if ('webkitSpeechRecognition' in window) {\n      // speech recognition API supported\n      console.log(\"supported\")\n    } else {\n      console.log(\"not supported\")\n      \n      // speech recognition API not supported\n    }\n  }\n\n  voiceSearch(): void {\n    this.resetData.emit();\n    (<HTMLInputElement>document.getElementById('textToSearch')).value = '';\n    (<HTMLImageElement>document.getElementById('image')).src = 'assets/mic-animate.gif';\n    \n    const {webkitSpeechRecognition} = (window as any)\n    const recognition = new webkitSpeechRecognition();\n    recognition.lang = 'en-UK';\n    \n    recognition.onresult = (event) => {\n      this.speechToText = event.results[0][0].transcript;\n      (<HTMLInputElement>document.getElementById('textToSearch')).value = this.speechToText;\n\n      if(this.speechToText){\n        this.emitSearchValue();\n      }\n    }\n\n    recognition.start();\n\n    recognition.onspeechend = function() {\n      recognition.stop();\n    }\n\n    recognition.onaudioend = function() {\n      (<HTMLImageElement>document.getElementById('image')).src = 'assets/mic.gif';\n    }\n  }\n\n  emitSearchValue() : any {\n    this.searchTextEmitter.emit(this.speechToText);\n  }\n\n}\n","<div class=\"container \">\n    <div class=\"m-auto\">\n        <input type=\"text\" id=\"textToSearch\" class=\"w-100 p-2\" placeholder=\"Click on the microphone icon and begin speaking.\" [readonly]=\"true\"/>\n        <input type=\"image\" alt=\"Start\" id=\"image\" src=\"assets/mic.gif\" (click)=\"voiceSearch()\"> \n    </div>\n    <div>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}