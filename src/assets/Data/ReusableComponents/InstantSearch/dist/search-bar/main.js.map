{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/component/home-page/home-page.component.css","webpack:///./src/app/component/home-page/home-page.component.html","webpack:///./src/app/component/home-page/home-page.component.ts","webpack:///./src/app/component/search-bar/search-bar.component.css","webpack:///./src/app/component/search-bar/search-bar.component.html","webpack:///./src/app/component/search-bar/search-bar.component.ts","webpack:///./src/app/data.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<app-home-page></app-home-page>\\n\"","import { Component } from '@angular/core';\nimport { Post } from './post';\nimport { DataService } from './data.service';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n\n  post:Post[]\n  constructor(\n    private dataService: DataService\n  ) {\n    \n  }\n  \n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AppComponent } from './app.component';\nimport {\n  \n  MatIconModule, MatInputModule,\n  MatAutocompleteModule,MatChipsModule,\n  MatFormFieldModule\n\n  \n} from '@angular/material';\nimport { HomePageComponent } from './component/home-page/home-page.component';\nimport { SearchBarComponent } from './component/search-bar/search-bar.component';\nimport { DataService } from './data.service';\nimport { HttpClientModule } from '@angular/common/http';\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomePageComponent,\n    SearchBarComponent,\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    FormsModule, \n    ReactiveFormsModule,\n     MatIconModule, MatInputModule,\n    MatAutocompleteModule,\n   MatChipsModule,\n    MatFormFieldModule\n\n    \n    \n  ],\n  providers: [\n    DataService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".group {\\n    width: 60%;\\n    margin:auto;\\n    background: rgb(241, 238, 233);\\n    padding: 15px;\\n    margin-top:12px;\\n}\"","module.exports = \"\\n<div style=\\\"margin:auto; width: 70%; margin-top: 30px;\\\">\\n    <app-search-bar (onSelectedOption)=\\\"onSelectedOption($event)\\\"></app-search-bar>\\n\\n</div>\\n<h2 style=\\\"text-align:center\\\">Data</h2>\\n<div *ngFor = \\\"let posts of post\\\" class=\\\"group\\\">\\n  <p><b>Item :</b>{{posts.id}}</p>\\n  <p><b>Title :</b> {{posts.title}}</p>\\n  <p><b>Body: </b>{{posts.body}}</p>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../../data.service';\nimport { Post } from '../../post';\n@Component({\n  selector: 'app-home-page',\n  templateUrl: './home-page.component.html',\n  styleUrls: ['./home-page.component.css']\n})\nexport class HomePageComponent implements OnInit {\n\n  post: Post[]\n  constructor(\n    private dataService: DataService\n  ) { }\n\n  ngOnInit() {\n    console.log('Inside ngOnInit() in home');\n    this.dataService.getPosts().subscribe(posts => {\n      this.post = posts\n      this.dataService.postsData = posts\n    });\n  }\n\n  onSelectedOption(e) {\n    console.log('Inside onSelectedOption() in home');\n    this.getFilteredExpenseList();\n  }\n\n  getFilteredExpenseList() {\n    console.log('Inside getFilteredExpenseList() in home');\n    if (this.dataService.searchOption.length > 0)\n      this.post = this.dataService.filteredListOptions();\n    else {\n      this.post = this.dataService.postsData;\n    }\n\n    console.log(this.post)\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<form class=\\\"example-form\\\" >\\n<mat-form-field class=\\\"example-full-width\\\" style=\\\"width: 100%\\\">\\n  <mat-chip-list #chipList>\\n    <mat-chip style=\\\"margin-top:0.4em;\\\" *ngFor=\\\"let option of  this.dataService.searchOption\\\" (removed)=\\\"removeOption(option)\\\">\\n\\n      <span>{{option.title}}</span>\\n      \\n      <mat-icon matChipRemove>cancel</mat-icon>\\n    </mat-chip>\\n    <input #autocompleteInput type=\\\"text\\\" placeholder=\\\"Enter title\\\" aria-label=\\\"Number\\\" matInput [formControl]=\\\"myControl\\\"\\n      [matAutocomplete]=\\\"auto\\\" [matChipInputFor]=\\\"chipList\\\">\\n    <mat-autocomplete #auto=\\\"matAutocomplete\\\" [displayWith]=\\\"displayFn\\\">\\n      <mat-option *ngFor=\\\"let option of autoCompleteList\\\" [value]=\\\"option\\\" (onSelectionChange)=\\\"filterPostList($event)\\\">\\n        {{option.title}}\\n      </mat-option>\\n    </mat-autocomplete>\\n  </mat-chip-list>\\n\\n</mat-form-field>\\n\\n</form>\"","import { Component, OnInit, ViewChild, ElementRef,EventEmitter,Output } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { DataService } from '../../data.service';\nimport { Post } from '../../post';\n\n@Component({\n  selector: 'app-search-bar',\n  templateUrl: './search-bar.component.html',\n  styleUrls: ['./search-bar.component.css']\n})\nexport class SearchBarComponent implements OnInit {\n\n  myControl = new FormControl();\n  filteredOptions: Observable<string[]>;\n  allPosts: Post[];\n  autoCompleteList: any[]\n\n  @ViewChild('autocompleteInput') autocompleteInput: ElementRef;\n  @Output() onSelectedOption = new EventEmitter();\n\n  constructor(\n    private dataService: DataService\n  ) { }\n\n  ngOnInit() {\n    console.log('Inside ngonInit() in search bar');\n    this.dataService.getPosts().subscribe(posts => {\n      this.allPosts = posts\n\n    });\n\n    this.myControl.valueChanges.subscribe(userInput => {\n      console.log('Inside valueChanges() in search bar myControl');\n      this.autoCompleteExpenseList(userInput);\n    })\n  }\n\n  private autoCompleteExpenseList(input) {\n    console.log('Inside autoCompleteExpenseList() in search bar');\n    let categoryList = this.filterCategoryList(input)\n    this.autoCompleteList = categoryList;\n  }\n\n  filterCategoryList(val) {\n    console.log('Inside filterCategoryLis() in search bar');\n    var categoryList = []\n    if (typeof val != \"string\") {\n      return [];\n    }\n    if (val === '' || val === null) {\n      return [];\n    }\n    return val ? this.allPosts.filter(s => s.title.toLowerCase().indexOf(val.toLowerCase()) != -1)\n      : this.allPosts;\n  }\n\n  displayFn(post: Post) {\n    console.log('Inside displayFn() in search bar');\n    let k = post ? post.title : post;\n    return k;\n  }\n\n  filterPostList(event) {\n    console.log('Inside filterPostList() in search bar');\n    var posts= event.source.value;\n        if(!posts) {\n          this.dataService.searchOption=[]\n        }\n        else {\n          //console.log(\"not\")\n\n            this.dataService.searchOption.push(posts);\n            this.onSelectedOption.emit(this.dataService.searchOption)\n        }\n        \n        this.focusOnPlaceInput();\n\n       \n        \n  }\n\n\n  removeOption(option) {\n    console.log('Inside removeOption() in search bar');\n        \n    let index = this.dataService.searchOption.indexOf(option);\n    if (index >= 0)\n        this.dataService.searchOption.splice(index, 1);\n        this.focusOnPlaceInput();\n\n        this.onSelectedOption.emit(this.dataService.searchOption)\n}\n\nfocusOnPlaceInput() {\n  console.log('Inside focusOnPlaceInput() in search bar');\n  this.autocompleteInput.nativeElement.focus();\n  this.autocompleteInput.nativeElement.value = '';\n}\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { Post } from './post';\nimport { Observable } from 'rxjs';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  searchOption=[]\n  public postsData: Post[]\n  postUrl : string = \"https://jsonplaceholder.typicode.com/posts\"; \n\n  constructor(private http: HttpClient) { }\n\n  getPosts(): Observable<Post[]>{\n    console.log('Inside getPosts() in DataService');\n    return this.http.get<Post[]>(this.postUrl);\n    \n  }\n\n  filteredListOptions() {\n    console.log('Inside filteredListOptions() in DataService');\n    let posts = this.postsData;\n        let filteredPostsList = [];\n        for (let post of posts) {\n            for (let options of this.searchOption) {\n                if (options.title === post.title) {\n                  filteredPostsList.push(post);\n                }\n            }\n        }\n        console.log(filteredPostsList);\n        return filteredPostsList;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}